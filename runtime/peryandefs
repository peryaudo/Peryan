extern mes :: String -> Void

extern printNum :: Int -> Void

extern strlen_ :: String -> Int // will be rewritten natively

func strlen(str :: String) :: Int {
	return strlen_(str)
}

func str(x :: Int) :: String {
	return String(x)
}

// TODO: implement Int(x)
// func int(x:: String) :: Int {
// 	// return Int(x)
// 	return 0
// }

extern strmid :: String -> Int -> Int -> String

extern instr :: String -> Int -> String -> Int

extern rnd :: Int -> Int
extern randomize :: Void -> Void

// func sdim(str :: ref String,  length :: String) :: Void {
// 	return
// }

extern exec :: String -> Int

extern dirlist :: (ref String) -> String -> Int -> Void

extern notesel :: (ref String) -> Void

extern noteinfo :: Int -> Int

extern noteget :: (ref String) -> Int -> Void

extern noteload :: String -> Void

// will be rewritten as a extern variable
var stat :: Int = 0
var mousex :: Int = 0
var mousey :: Int = 0
var mousew :: Int = 0
var ginfo_winx :: Int = 0
var ginfo_winy :: Int = 0

extern sqrt :: Double -> Double
extern sin :: Double -> Double
extern cos :: Double -> Double
extern limitf :: Double -> Double -> Double -> Double
extern redraw :: Int -> Void
extern pos :: Int -> Int -> Void
extern color :: Int -> Int -> Int -> Void = -1, -1, -1

extern stick :: Int -> Void
extern bmpsave :: String -> Void
extern dialog :: String -> Int -> Void
extern await :: Int -> Void
extern boxf :: Int -> Int -> Int -> Int -> Void
extern font :: String -> Int -> Void
var msgothic :: String = "MS Gothic"
var mspgothic :: String = "MS P Gothic"

func int (x :: Double) :: Int {
	return Int(x)
}

extern getkey :: (ref Int) -> Int -> Void
